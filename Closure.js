// En este desaf칤o recibir치s dos n칰meros aleatorios por par치metros.

// Usando las closures deber치s crear una funci칩n a la cual se pueda llamar en primer lugar con un solo n칰mero y secuencialmente volver a llamarla para completar la suma con el siguiente n칰mero:

// La soluci칩n deber치 tener un input y output como la siguiente, en algunos casos puede que no se mande el segundo n칰mero por lo que deber치s pensar en como manejar ese tipo de casos.

// Input:

// sumWithClosure(2)(3);

// Output:

// 5

// Input:

// sumWithClosure(90)();

// Output:

// 90

export function sumWithClosure(firstNum) {
    // Tu c칩digo aqu칤 游녣
    return function (secNum=0){ // no es inicializar una variable, le asigna 0 si no se coloca un segundo numero
        return firstNum+secNum;
    }
  }

  